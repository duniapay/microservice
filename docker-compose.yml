version: "3.6"
services:
  mongo:
    container_name: dunia-mongo
    image: mongo:4.2
    command: --replSet dunia-rs --bind_ip_all
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    networks:
      - dunia
    ports:
      - 27017:27017
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - type: volume
        source: mongodb
        target: /data/db
      - type: volume
        source: mongodb-cfg
        target: /data/configdb
  mongo-replicator:
    container_name: dunia-mongo-replicator
    build: ./mongo-replicator
    environment:
      - HOST=mongo
      - PORT=27017
      - USERNAME=root
      - PASSWORD=root
      - REPLICA_SET_NAME=dunia-rs
    networks:
      - dunia
    depends_on:
      - mongo
  # redis:
  #   container_name: saturday-redis
  #   image: redis:5.0.5
  #   command: redis-server --appendonly yes
  #   hostname: redis
  #   networks:
  #     - saturday
  #   ports:
  #     - 6379:6379
  api:
    container_name: customer-api
    build:
      context: ./
      dockerfile: Dockerfile
    networks:
      - dunia
    environment:
      APP_ENV: production
    volumes:
      - ./src:/app/src
    ports:
      - 3001:3001
      - 8080:8080
    depends_on:
      #   - redis
      - mongo-replicator
  # migrator:
  #   container_name: saturday-migrator
  #   command: npm run migrate
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile.dev
  #   networks:
  #     - saturday
  #   volumes:
  #     - ./api/src:/app/src
  #   depends_on:
  #     - mongo-replicator
  # scheduler:
  #   container_name: saturday-scheduler
  #   command: npm run schedule-dev
  #   build:
  #     context: ./api
  #     dockerfile: Dockerfile.dev
  #   networks:
  #     - saturday
  #   volumes:
  #     - ./api/src:/app/src
  #   depends_on:
  #     - mongo-replicator

networks:
  dunia:
    name: dunia-network

volumes:
  mongodb:
  mongodb-cfg: